#!/bin/bash

#####################################################
# Script to run BDEMA experiments in RAVEN cluster  #
# Vicente Adolfo Bolea Sanchez                      #
#####################################################

#Includes
. launcher.vars

if [ -z $nodes ] || [ -z $path ]; then 
 echo "Undefined variable in launcher.vars"
 exit
fi

function killapps {
 echo Killing another instances of this program
 killall scheduler 

 for i in "${nodes[@]}"; do
   ssh $i killall appserver
 done
 exit
}

trap killapps SIGINT SIGTERM

declare -a PIDS

case "$1" in 
"BDEMA") 	
 scheduler=$bin'scheduler_bdema'
 scheduler_log=$log'bdema.dat'
 distribution_log=$log'distribution.result'
 ;;

"HASH") 	
 scheduler=$bin'scheduler_hash'
 scheduler_log=$log'hash.dat'
 distribution_log=$log'hashdistribution.result' 
 ;;

"KILL") killapps ;; 

*)
 echo "Introduce 'launcher BDEMA|HASH|KILL' "
 exit 
 ;;

esac

#Clean log files
> $log'errors.log'
> $distribution_log

printf "\n#%s\n" $date >> $scheduler_log
echo '#[#queries] [#DiskPages] [hits] [Miss] '        \
     '[Exec Time] [Max Exec Time] [Avg Exec Time] '   \
     '[Wait Time] [Max Wait Time] [Avg Wait Time] '   \
     '[Total Time] [hitRatio]' >> $scheduler_log

ii=$2
# launch programs
$scheduler -q $ii < $data > $tmp'uniDQPscheduler.log'&
pidS=$!

idx=0
for i in "${nodes[@]}"; do
do	
 ssh $i $appserver > tmp/uniDQP.$i.log 2>> $log'errors.log'&
 PIDS[$idx]=$!
 let idx++
done

#Wait for all the process
for i in ${PIDS[@]}; do
 wait $i
done
wait $pidS

#store the output
cat tmp/uniDQP.*.log | awk \
     ' $1 == "Processed:" { printf "%s\t",$2 }
     END{ print "" } ' >> $distribution_log

cat $tmp'uniDQPscheduler.log' | awk \
   ' $1 == "#querys:"       { printf "%s\t",$2 }
     $1 == "#DiskPages:"    { printf "%s\t",$2 }
     $1 == "TotalHit:"      { printf "%s\t",$2 }
     $1 == "TotalMiss:"     { printf "%s\t",$2 }
     $1 == "TotalExecTime:" { printf "%s\t",$2 }
     $1 == "MaxExecTime:"   { printf "%s\t",$2 }
     $1 == "AveExecTime:"   { printf "%s\t",$2 }
     $1 == "TotalWaitTime:" { printf "%s\t",$2 }
     $1 == "MaxWaitTime:"   { printf "%s\t",$2 }
     $1 == "AveWaitTime:"   { printf "%s\t",$2 }
     $1 == "TotalTime:"     { printf "%s\t",$2 }
     $1 == "Hitratio:"      { printf "%s\n",$2 } ' >> $scheduler_log

echo Done with $ii IO operations 
